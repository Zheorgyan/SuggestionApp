@page "/SampleData"
@inject ICategoryData categoryData
@inject IStatusData statusData


<h3>SampleData</h3>
@if(categoriesCreated)
{
    <h4>Categories have been created</h4>
}
else
{
    <button class="btn btn-primary" @onclick="CreateCategories">Create Categories</button>
}
@if(statusesCreated)
{
    <h4>Statuses have been created</h4>
}
else
{
    <button class="btn btn-primary" @onclick="CreateStatuses">Create Statuses</button>
}

@code {
    private bool categoriesCreated;
    private bool statusesCreated;

    private async Task CreateCategories()
    {
        var categories = await categoryData.GetAllCategories();

        if(categories?.Count > 0)
        {
            return;
        }
        CategoryModel cat = new()
        {
            CategoryName = "Courses",
            CategoryDiscription = "Full paid courses"
        };
        await categoryData.CreateCategory(cat);

        cat = new()
        {
            CategoryName = "Dev questions",
            CategoryDiscription = "Advice on being a developer"
        };
        await categoryData.CreateCategory(cat);

        cat = new()
        {
            CategoryName = "In-Depth Tutorial",
            CategoryDiscription = "A deep-dive video on how to use a topic"
        };
        await categoryData.CreateCategory(cat);

        cat = new()
        {
            CategoryName = "10-minutes Training",
            CategoryDiscription = "A quick \"How do I use this ?\" video"
        };
        await categoryData.CreateCategory(cat);

        categoriesCreated = true;
    }

    private async Task CreateStatuses()
    {
        var statuses = await statusData.GetAllStatuses();

        if(statuses?.Count > 0)
        {
            return;
        }

        StatusModel status = new()
        {
            StatusName = "Completed",
            StatusDiscription = "The suggestion was accepted"
        };
        await statusData.CreateStatus(status);

        status = new()
        {
            StatusName = "Watching",
            StatusDiscription = "The suggestion is interesting"
        };
        await statusData.CreateStatus(status);

        status = new()
        {
            StatusName = "Upcoming",
            StatusDiscription = "The suggestion was accepted and it will be released soon"
        };
        await statusData.CreateStatus(status);

        status = new()
        {
            StatusName = "Dismissed",
            StatusDiscription = "The suggestion was not something taht we are going to undertake"
        };
        await statusData.CreateStatus(status);

        statusesCreated = true;
    }
}
